LIBRARY IEEE;
use IEEE.std_logic_1164.all;

entity Serial_LCD_Controller is 
port(	
		CLK: in std_logic;
		SS: in std_logic;
		SCLK: in std_logic;
		SDX: in std_logic;
		D_out: out std_logic_vector (8 downto 0);
		Wrl: out std_logic;
		R: in std_logic
);

end Serial_LCD_Controller;
 
architecture ARQ_Serial_LCD_Controller of Serial_LCD_Controller is

component Serial_Receiver is
port(	
SDX: in std_logic;
SCLK: in std_logic;
accept: in std_logic;
CLK: in std_logic;
SS: in std_logic;
R: in std_logic;
D: out std_logic_vector (8 downto 0);
DX_val: out std_logic
);
end component;

component LCD_Dispatcher is
port(	
		CLK: in std_logic;
		RESET: in std_logic;
		R: out std_logic;
		CE: out std_logic;
		D_val: in std_logic;
		TC: in std_logic;
		D_in: in std_logic_vector (8 downto 0);
		D_out: out std_logic_vector (8 downto 0);
		Wrl: out std_logic;
		done: out std_logic
);
end component;

component Counter_4BITS is
port (
R: in std_logic;
CE: in std_logic; 	-- Count Enable;
CLK: in std_logic;
TC: out std_logic 	-- Terminal Count (TC): Indica o fim de contagem. Quando a '1' indica que a contagem chegou ao valor definido por terminalValue.
);
end component;

signal s_r, s_CE, s_done, s_D_val, s_tc : std_logic;
signal s_D: std_logic_vector(8 downto 0);

begin

Serial_ReceiverL_INST0: Serial_Receiver port map(
SDX => SDX,
SCLK => SCLK,
accept => s_done,
CLK => CLK,
SS => SS,
R => R,
D => s_D,
DX_val => s_D_val
);

LCD_Dispatcher_INST0: LCD_Dispatcher port map(
CLK => CLK,
D_val => s_D_val,
TC => s_tc,
D_in => s_D,
D_out => D_out,
Wrl => Wrl,
done => s_done,
RESET => R,
CE => s_CE,
R => s_r
);

Counter_4BITS_INST0: Counter_4BITS port map(
R => s_r,
TC => s_tc,
CE => s_CE,
CLK => CLK
);


end ARQ_Serial_LCD_Controller;