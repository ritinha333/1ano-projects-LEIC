LIBRARY IEEE;
use IEEE.std_logic_1164.all;

entity OutPut_Buffer_tb is
end OutPut_Buffer_tb;

architecture behavioral of Output_Buffer_tb is

component Output_Buffer is
port (
RESET: in std_logic;
CLK : in std_logic;
Load: in std_logic;
ACK: in std_logic;
D: in std_logic_vector(3 downto 0);
Q: out std_logic_vector(3 downto 0);
OB_free: out std_logic;
D_val: out std_logic
);
end component;

--UUT signals
constant MCLK_PERIOD: time := 20ns; -- 20 ns;
constant MCLK_HALF_PERIOD: time := MCLK_PERIOD / 2;

signal RESET_tb: std_logic;
signal CLK_tb: std_logic;
signal Load_tb: std_logic;
signal ACK_tb: std_logic;
signal D_tb: std_logic_vector(3 downto 0);
signal Q_tb: std_logic_vector(3 downto 0);
signal OB_free_tb: std_logic;
signal D_val_tb: std_logic;

begin

---Unit Under Test
UUT: Output_Buffer
port map(RESET => RESET_tb,
			CLK => CLK_tb,
			Load => Load_tb,
			ACK => ACK_tb,
			D => D_tb,
			Q => Q_tb,
			OB_free => OB_free_tb,
			D_val =>  D_val_tb
);

clk_gen: process
begin
	CLK_tb <= '0';
	wait for MCLK_HALF_PERIOD;
	CLK_tb <= '1';
	wait for MCLK_HALF_PERIOD;
	
end process;



stimulus: process
begin

--fazer reset ao módulo
RESET_tb <= '1';

wait for MCLK_PERIOD*2;


--reset a zero
RESET_tb <= '0';

wait for MCLK_PERIOD*2;

-- Load ativo a '0' ao qual mantém o estado '00' e OBfree ativo a '1'
Load_tb <= '0';
D_tb <= "0111";

wait for MCLK_PERIOD;
-- W_reg = 1
Load_tb <= '1';
wait for MCLK_PERIOD*2;

-- Wait not load

wait for MCLK_PERIOD;


wait for MCLK_PERIOD*2;

Load_tb <= '0';

wait for MCLK_PERIOD;
-- D_val = '1'

wait for MCLK_PERIOD*2;

-- Wait ACK 
ACK_tb <= '0';

wait for MCLK_PERIOD;

-- ACK => '1'
wait for MCLK_PERIOD*2;

ACK_tb <= '1';

wait for MCLK_PERIOD;

-- Wait not ACK
wait for MCLK_PERIOD*2;

ACK_tb <= '0';

wait for MCLK_PERIOD;

wait;

end process;

end architecture;
